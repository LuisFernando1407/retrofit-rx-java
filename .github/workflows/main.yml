name: Approval

# Set the branch or branches you want to run this workflow
on:
  pull_request:
    branches:
      - develop

jobs:
  lint:
    name: Android Lint

    runs-on: ubuntu-latest

    # Check the code with Android Lint
    # If you use kotlin use ktlint
    steps:
      - uses: actions/checkout@v1

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      # Decode google services configuration file
      - name: Decode google-services.json
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
        run: echo $GOOGLE_SERVICES > app/google-services.json

      # Lint to flow debug
      - name: Lint debug flavor
        run: ./gradlew lintDebug --stacktrace

      # Lint results
      - name: Lint results
        uses: actions/upload-artifact@v1
        with:
          name: app
          path: app/build/reports/lint-results-debug.html

  apk:
    name: Generate APK
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
        
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      # Decode google services configuration file
      - name: Decode google-services.json
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
        run: echo $GOOGLE_SERVICES > app/google-services.json

      # Assemble debug apk to send to firebase test lab
      - name: Assemble app debug APK
        run: ./gradlew assembleDebug --stacktrace

      - name: Upload app APK
        uses: actions/upload-artifact@v1
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk

      # Assemble debug apk to send to firebase test lab
      - name: Assemble app tests debug apk
        run: ./gradlew assembleDebugAndroidTest --stacktrace

      - name: Upload test APK
        uses: actions/upload-artifact@v1
        with:
          name: app-debug-androidTest
          path: app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk

  testing:
    name: Unit & Instrumented Test
    needs: apk

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
        
      - name: Download app APK
        uses: actions/download-artifact@v1
        with:
          name: app-debug

      - name: Download android test APK
        uses: actions/download-artifact@v1
        with:
          name: app-debug-androidTest

      - name: Login to google cloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with: 
          version: '270.0.0' 
          service_account_key: ${{ secrets.GCLOUD_AUTH }}
          
      - name: Set current project in google cloud
        run: gcloud config set project ${{ secrets.FIREBASE_PROJECT_ID }}

      # Run unit tests
      - name: Run unit tests
        run: ./gradlew test --stacktrace

      # Run instrumented tests on firebase test lab
      - name: Run instrumentation tests in firebase test lab
        run: gcloud firebase test android run --type instrumentation --app app-debug/app-debug.apk --test app-debug-androidTest/app-debug-androidTest.apk --device model=Pixel2,version=29,locale=en,orientation=portrait
